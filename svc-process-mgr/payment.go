package main

import "github.com/elodina/go-avro"

type Payment struct {
	Paid                   bool
	DatePaid               string
	LoanNumber             string
	AmountInCents          int32
	SourceAccountNumber    string
	SourcePaymentNumber    string
	SourceObligationNumber string
}

func NewPayment() *Payment {
	return &Payment{}
}

func (o *Payment) Schema() avro.Schema {
	if _Payment_schema_err != nil {
		panic(_Payment_schema_err)
	}
	return _Payment_schema
}

// Generated by codegen. Please do not modify.
var _Payment_schema, _Payment_schema_err = avro.ParseSchema(`{
    "type": "record",
    "namespace": "avro",
    "name": "payment",
    "fields": [
        {
            "name": "paid",
            "type": "boolean"
        },
        {
            "name": "datePaid",
            "type": "string"
        },
        {
            "name": "loanNumber",
            "type": "string"
        },
        {
            "name": "amountInCents",
            "type": "int"
        },
        {
            "name": "sourceAccountNumber",
            "type": "string"
        },
        {
            "name": "sourcePaymentNumber",
            "type": "string"
        },
        {
            "name": "sourceObligationNumber",
            "type": "string"
        }
    ]
}`)
